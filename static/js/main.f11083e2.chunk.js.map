{"version":3,"sources":["components/Chart/Chart.module.css","components/Search/Search.module.css","components/Map/Map.module.css","components/Search/Search.js","components/Chart/Chart.js","components/Map/Map.js","App.js","index.js"],"names":["module","exports","Search","query","onChange","className","styles","search","value","e","target","placeholder","Chart","React","memo","data","chartRef","useRef","useEffect","chart","ChartJS","current","type","labels","map","reg","key","datasets","label","confirmed","borderColor","borderWidth","options","responsive","maintainAspectRatio","destroy","scroll","style","width","length","ref","Map","MapContainer","preferCanvas","zoom","minZoom","center","maxBounds","TileLayer","attribution","url","country","CircleMarker","radius","pathOptions","color","lat","long","Tooltip","direction","permanent","App","useState","setData","region","setRegion","setQuery","apiCall","useCallback","a","fetch","response","json","Object","entries","reduce","prev","concat","countries","useMemo","All","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f11083e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"Chart_chart__2ay2D\",\"scroll\":\"Chart_scroll__hDKTO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__3OUtB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"Map_map__2bGnQ\"};","import styles from './Search.module.css'\n\nconst Search = ({query, onChange}) =>\n  <div className={styles.search}>\n    <input\n      value={query}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder='Search country'/>\n  </div>\n\nexport default Search","import React, {useEffect, useRef} from 'react';\nimport ChartJS from 'chart.js/auto';\nimport styles from './Chart.module.css'\n\nconst Chart = React.memo(({data}) => {\n  const chartRef = useRef()\n\n  useEffect(() => {\n    const chart = new ChartJS(chartRef.current, {\n      type: 'bar',\n      data: {\n          labels: data.map(reg => reg.key),\n          datasets: [{\n              label: 'Confirmed cases',\n              data: data.map(reg => reg.confirmed),\n              borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n                'rgba(75, 192, 192, 1)',\n                'rgba(153, 102, 255, 1)',\n                'rgba(255, 159, 64, 1)',\n              ],\n              borderWidth: 2,\n          }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n      }\n    })\n    return () => chart.destroy()\n  }, [data])\n\n  return <div className={styles.chart}>\n    <div className={styles.scroll} style={{width: data?.length > 10 ? data.length * 40 + 'px' : 'auto'}}>\n      <canvas ref={chartRef}/>\n    </div>\n  </div>\n})\n\nexport default Chart","import React from \"react\";\nimport {MapContainer, Tooltip, TileLayer, CircleMarker} from \"react-leaflet\"\nimport 'leaflet/dist/leaflet.css';\nimport styles from './Map.module.css'\n\nconst Map = React.memo(({data}) => \n  <MapContainer\n    preferCanvas\n    className={styles.map}\n    zoom={2}\n    minZoom={2}\n    center={[0, 0]}\n    maxBounds={[\n      [-90, -180],\n      [90, 180],\n    ]}>\n    <TileLayer\n      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    />\n    {data.map((country) =>\n      <CircleMarker\n        key={country.key}\n        radius={2}\n        pathOptions={{color: 'red'}}\n        center={[country.lat, country.long]}>\n        <Tooltip direction='top' permanent>\n          <span>{country.key}</span><br/>\n          cases: {country.confirmed}\n        </Tooltip>\n      </CircleMarker>\n    )}\n  </MapContainer>\n)\n\nexport default Map","import {useCallback, useEffect, useMemo, useState} from \"react\";\nimport Search from \"./components/Search/Search\";\nimport Chart from \"./components/Chart/Chart\";\nimport Map from \"./components/Map/Map\";\n\nconst App = () => {\n  const [data, setData] = useState(null)\n  const [region, setRegion] = useState(null)\n  const [query, setQuery] = useState('')\n\n  const apiCall = useCallback(async () => {\n    let response = await fetch('https://covid-api.mmediagroup.fr/v1/cases')\n    response = await response.json()\n    setData(response)\n  }, [])\n\n  useEffect(apiCall, [apiCall])\n\n  useEffect(() => {\n    if(data && query in data) {\n      setRegion(\n        Object.entries(data[query]).reduce((prev, [key, value]) => {\n          if (key === 'All' && value.lat && value.long) return prev.concat({...value, key: query})\n          else if (value.lat && value.long) return prev.concat({...value, key})\n          else return prev\n        }, [])\n      )\n    }\n    else setRegion(null)\n  }, [data, query])\n\n  const countries = useMemo(() => {\n    if (data) {\n      return Object.entries(data).reduce((prev, [key, value]) =>\n        value.All.lat && value.All.long ? prev.concat({...value.All, key}) : prev\n      , [])\n    }\n    else return []\n  }, [data])\n\n  return <>\n    <Search query={query} onChange={setQuery}/>\n    <Chart data={region || countries}/>\n    <Map data={region || countries}/>\n  </>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}